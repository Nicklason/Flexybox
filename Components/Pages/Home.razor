@page "/"

@inject DepartmentsService DepartmentsService
@inject FavoriteDepartmentsService FavoriteDepartmentsService

@code {
  private List<(int, string)> departments = new ();
  private List<(int, string)> favoriteDepartments = new ();

  protected override async Task OnInitializedAsync() {
    departments = await DepartmentsService.GetAllIdsAndNamesAsync();
  }

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (!firstRender) {
      return;
    }

    await LoadStateAsync();
    StateHasChanged();
  }

  private async Task LoadStateAsync() {
    var favorites = await FavoriteDepartmentsService.GetLikedAsync();
    favoriteDepartments = departments.Where((department) => favorites.Contains(department.Item1)).ToList();
  }
}

<div class="container">
  <div class="header">
    <div class="title">
      <h1>Welcome to Flexybook</h1>
    </div>
    <p>Explore departments.</p>
  </div>
  @if (favoriteDepartments.Count != 0) {
    <h3>Your favorite departments</h3>

    @foreach (var department in favoriteDepartments)
    {
      <NavLink href="@("/department/" + department.Item1)" Match="NavLinkMatch.All">
        @department.Item2
      </NavLink>
    }
  }
  <h3>Featured departments</h3>

  @if (departments.Count == 0)
  {
    <p>No departments available.</p>
  } else {
    @foreach (var department in departments)
    {
      <NavLink href="@("/department/" + department.Item1)" Match="NavLinkMatch.All">
        @department.Item2
      </NavLink>
    }
  }
</div>
