@inject FavoriteDepartmentsService FavoriteDepartmentsService
@inject IToastService toastService

@code {
  [Parameter]
  public required int Id { get; set; }
  [Parameter]
  public required string Name { get; set; }
  [Parameter]
  public required List<Data.Image> Images { get; set; }
  [Parameter]
  public required Address Address { get; set; }
  [Parameter]
  public required Contact Contact { get; set; }
  [Parameter]
  public required bool IsOpen { get; set; }

  private bool IsLiked = false;
  private bool IsLoaded = false;

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (!firstRender) {
      return;
    }

    await LoadStateAsync();
    IsLoaded = true;
    StateHasChanged();
  }

  private async Task LoadStateAsync() {
    var liked = await FavoriteDepartmentsService.GetLikedAsync();
    IsLiked = liked.Contains(Id);
  }

  private async Task ToggleLikedAsync() {
    IsLiked = !IsLiked;

    var liked = await FavoriteDepartmentsService.GetLikedAsync();
    if (IsLiked) {
      liked.Add(Id);
    } else {
      liked.Remove(Id);
    }

    await FavoriteDepartmentsService.SaveLikedAsync(liked);
    
    toastService.ShowSuccess("Department has been " + (IsLiked ? "added" : "removed") + " as a favorite");
  }
}

<div class="container">
    <div class="header">
        <div class="title">
            <h1>@Name</h1>
            @if (IsLoaded && RendererInfo.IsInteractive) {
            <button class="favorite-toggle @(IsLiked ? "is-favorite" : "")" @onclick="@ToggleLikedAsync"><i class="fa-solid fa-heart"></i></button>
            }
        </div>
        <div class="info">
            <div class="address">
                <span class="status @(IsOpen ? "open" : "")"><i class="fa-solid fa-circle fa-4xs"></i>@(IsOpen ? "Open" : "Closed")</span>
                <span><i class="fa-solid fa-circle fa-8xs"></i>@Address.GetStreetAndZipCode()</span>
                <span><i class="fa-solid fa-circle fa-8xs"></i>@Address.City</span>
            </div>
            <div class="buttons">
                <button><span><i class="fa-solid fa-mobile-screen"></i>@Contact.GetPhoneNumber()</span></button>
                <button><span><i class="fa-solid fa-at"></i>@Contact.Email</span></button>
                @if (@Contact.HasSupportChat) {
                    <button><i class="fa-solid fa-headset"></i></button>
                }
            </div>
        </div>
    </div>
</div>
<HorizontalScroll class="container">
    @foreach (var image in Images)
    {
        <img src="@image.Url" />
    }
</HorizontalScroll>
