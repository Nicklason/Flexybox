@page "/"

@inject FavoriteDepartmentsService FavoriteDepartmentsService

@code {
  private List<Data.Department> departments = DepartmentsService.GetAll();
  private List<Data.Department> favoriteDepartments = new List<Data.Department>();

  private bool IsLoaded = false;

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (!firstRender) {
      return;
    }

    await LoadStateAsync();
    IsLoaded = true;
    StateHasChanged();
  }

  private async Task LoadStateAsync() {
    var favorites = await FavoriteDepartmentsService.GetLikedAsync();
    favoriteDepartments = departments.Where((department) => favorites.Contains(department.Name)).ToList();
  }
}

<div class="page">
  <div class="section">
    <div class="subsection">
      <div class="title">
        <h1>Welcome to Flexybook</h1>
      </div>
    </div>
    <div class="subsection">
      <p>Explore departments.</p>
    </div>
    @if (favoriteDepartments.Count != 0) {
    <div class="subsection">
      <h2>Your favorite departments</h2>

      @foreach (var department in favoriteDepartments)
      {
        <NavLink href="@("/department/" + department.Name)" Match="NavLinkMatch.All">
          @department.Name
        </NavLink>
      }
    </div>
    }
    <div class="subsection">
      <h2>Featured departments</h2>

      @if (departments.Count == 0)
      {
        <p>No departments available.</p>
        return;
      }

      @foreach (var department in departments)
      {
        <NavLink href="@("/department/" + department.Name)" Match="NavLinkMatch.All">
          @department.Name
        </NavLink>
      }
    </div>
  </div>
</div>
